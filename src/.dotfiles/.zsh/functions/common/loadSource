# undefined
builtin autoload -X

declare file="${1:-}"
declare options dir fileName fullPath filePath pathName thisFile

[[ -z "$file" ]] && errorExit "loadSource :: Missing Argument!"

shift

fileName="${file##*/}"
fileName="${fileName%%.*}"

declare -A FILEOPTS

FILEOPTS[installed]=0
FILEOPTS[install]=0
FILEOPTS[config]=0
FILEOPTS[remove]=0
FILEOPTS[test]=0

options=$(getopt -o "cdirt" -a -- "$@")

eval set -- "$options"

while true
do
	case $1 in
		-c) FILEOPTS[config]=1;;
		-d) FILEOPTS[installed]=1;;
		-i) FILEOPTS[install]=1;;
		-r) FILEOPTS[remove]=1;;
		-t) FILEOPTS[test]=1;;
		--)
			shift
			break
			;;
		*)
			errorExit "loadSource :: Invalid Option '$1'" --code=14
	esac
	shift
done

if [[ -f "$file" ]]; then
	fullPath="$file"
else
	if [[ $DEBUG == 1 ]]; then echo "Finding '$file'"; fi
	if [[ ! "$file" = *.* ]]; then thisFile="$file".zsh; else thisFile="$file"; fi
	for dir in "${SOURCE_DIRS[@]}"
	do
		if [[ $DEBUG -eq 1 ]]; then echo "Searching '$dir'"; fi
		if [[ -f "$dir/$thisFile" ]]; then
			fullPath="$dir/$thisFile"
			break
		fi
	done
fi

if [[ -z "$fullPath" ]] || [[ ! -f "$fullPath" ]]; then errorExit "File '$file' Not Found!"; fi

# shellcheck disable=SC1090
source "$fullPath"

# INSTALLED
if [[ "${FILEOPTS[installed]}" -eq 1 ]]; then
	eval "$fileName::installed"
	return $?
fi
## INSTALL & REMOVE
if [[ "${FILEOPTS[install]}" -eq 1 ]]; then
	eval "$fileName::install"
elif [[ "${FILEOPTS[remove]}" -eq 1 ]]; then
	eval "$fileName::remove"
fi
## CONFIGURE
if [[ "${FILEOPTS[config]}" -eq 1 ]]; then
	eval "$fileName::config"
fi
## TEST
if [[ "${FILEOPTS[test]}" -eq 1 ]]; then
	if grep -q "$fileName::test" "$fullPath"; then
		eval "$fileName::test"
		return "$?"
	fi
fi

unset options
unset FILEOPTS
unset fullPath
unset fileName
unset file
