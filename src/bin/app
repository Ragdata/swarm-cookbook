#!/usr/bin/env zsh
# shellcheck disable=SC1090,SC2154
# ==================================================================
# app
# ==================================================================
# Swarm Cookbook Binary File
#
# File:         app
# Author:       Ragdata
# Date:         18/08/2023
# License:      MIT License
# Copyright:    Copyright © 2023 Darren (Ragdata) Poulton
# ==================================================================
# PREFLIGHT
# ==================================================================
# set debug mode = false
if [[ -z "$DEBUG" ]]; then export DEBUG=0; fi
# if script is called with 'debug' as an argument, then set debug mode
if [[ "${1:l}" == "debug" ]] || [[ "$DEBUG" == 1 ]]; then shift; DEBUG=1; set -- "${@}"; set -axeET; else set -aeET; fi
# ==================================================================
# DEPENDENCIES
# ==================================================================

# ==================================================================
# VARIABLES
# ==================================================================
#
# BUILD VARIABLES
#
export APP_BUILD="x"
export APP_VERSION="v-0.1.0"
export APP_BUILD_DATE="20230718-0033"
# ==================================================================
# FUNCTIONS
# ==================================================================
# ------------------------------------------------------------------
# app::version
# ------------------------------------------------------------------
# @description Reports the version and build date of this release
#
# @noargs
#
# @stdout Version, Copyright, & Build Information
# ------------------------------------------------------------------
app::version()
{
	local verbosity="${1:-}"

	if [[ -z "$verbosity" ]]; then
		echo "${APP_VERSION}"
	else
		echo
		echo "Swarm Cookbook"
		echoWhite "'app' Command File ${APP_VERSION}"
		echo "Copyright © 2022-2023 Darren (Ragdata) Poulton"
		echo "Build: ${APP_BUILD}"
		echo "Build Date: ${APP_BUILD_DATE}"
		echo
	fi
}
# ==================================================================
# MAIN
# ==================================================================
# trap 'errorHandler "LINENO" "BASH_LINENO" "${BASH_COMMAND}" "${?}"' ERR

file="${1:-}"

[[ -z "$file" ]] && errorExit "launch :: Missing Argument!" -c 1
[[ -n "$file" ]] && { args+=("$file"); shift; }

declare -A OPTS

OPTS[help]=0
OPTS[requires]=0
OPTS[installed]=0
OPTS[install]=0
OPTS[config]=0
OPTS[remove]=0
OPTS[test]=0

options=$(getopt -o "hRcdirt" -a -- "$@")

eval set --"$options"

while true
do
	case $1 in
		-h) OPTS[help]=1;;
		-R) OPTS[requires]=1;;
		-c) OPTS[config]=1;;
		-d) OPTS[installed]=1;;
		-i) OPTS[install]=1;;
		-r) OPTS[remove]=1;;
		-t) OPTS[test]=1;;
		--)
			shift
			break
			;;
		*)
			errorExit "loadSource :: Invalid Option '$1'" --code=14
	esac
	shift
done

if [[ -z "${OPTS[help]}" ]] && [[ -z "${OPTS[requires]}" ]] && [[ -z "${OPTS[installed]}" ]] && [[ -z "${OPTS[install]}" ]] && [[ -z "${OPTS[config]}" ]] && [[ -z "${OPTS[remove]}" ]] && [[ -z "${OPTS[test]}" ]]; then
	OPTS["install"]=1
	args+=("-i")
fi

unset OPTS

loadSource "${args[@]}"
