#!/usr/bin/env zsh
# shellcheck disable=SC1090,SC2153,SC2154,SC2155
# ==================================================================
# zsh_install
# ==================================================================
# Swarm Cookbook Binary File
#
# File:         zsh_install
# Author:       Ragdata
# Date:         18/08/2023
# License:      MIT License
# Copyright:    Copyright © 2023 Darren (Ragdata) Poulton
# ==================================================================
# PREFLIGHT
# ==================================================================
# set debug mode = false
if [[ -z "$DEBUG" ]]; then declare -gx DEBUG=0; fi
# if script is called with 'debug' as an argument, then set debug mode
if [[ "${1:l}" == "debug" ]] || [[ "$DEBUG" == 1 ]]; then shift; DEBUG=1; set -- "${@}"; set -axeET; else set -aeET; fi
# ==================================================================
# VARIABLES
# ==================================================================
#
# BUILD VARIABLES
#
declare -gx ZIN_BUILD="x"
declare -gx ZIN_VERSION="v-0.1.0"
declare -gx ZIN_BUILD_DATE="20230718-0033"
# ==================================================================
# FUNCTIONS
# ==================================================================
# ------------------------------------------------------------------
# zsh_install::checkRoot
# ------------------------------------------------------------------
zsh_install::checkRoot()
{
	local tmpFile="$(mktemp)" ID

	id -u > "$tmpFile"

	ID="$(cat "$tmpFile")"

	if [[ $ID != 0 ]]; then
		echo "This script MUST be run as root!"
		exit 1
	fi
}
# ------------------------------------------------------------------
# zsh_install::checkShell
# ------------------------------------------------------------------
zsh_install::checkShell()
{
	declare -gx SHELL_TYPE
	declare -gx SHELL_VERSION

	SHELL_TYPE="$SHELL"
	SHELL_TYPE="${SHELL_TYPE##*/}"

	if [[ "$SHELL_TYPE" == "zsh" ]]; then
		SHELL_VERSION="$ZSH_VERSION"
	else
		SHELL_VERSION="$BASH_VERSION"
	fi

	if [ "${SHELL_VERSION:0:1}" -lt 4 ]; then
		echo "This script requires a minimum Bash / ZSH version of 4!"
		exit 1
	fi
}
# ------------------------------------------------------------------
# zsh_install::version
# ------------------------------------------------------------------
# @description Reports the version and build date of this release
#
# @noargs
#
# @stdout Version, Copyright, & Build Information
# ------------------------------------------------------------------
zsh_install::version()
{
	local verbosity="${1:-}"

	if [[ -z "$verbosity" ]]; then
		echo "${ZIN_VERSION}"
	else
		echo
		echo "Swarm Cookbook"
		echoWhite "'zsh_install' Command File ${ZIN_VERSION}"
		echo "Copyright © 2022-2023 Darren (Ragdata) Poulton"
		echo "Build: ${ZIN_BUILD}"
		echo "Build Date: ${ZIN_BUILD_DATE}"
		echo
	fi
}
# ==================================================================
# MAIN
# ==================================================================
# trap 'errorHandler "LINENO" "BASH_LINENO" "${BASH_COMMAND}" "${?}"' ERR

zsh_install::checkShell
zsh_install::checkRoot

exec sudo zsh -c "$1" "$2" "$3"
